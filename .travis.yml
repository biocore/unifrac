sudo: required
dist: trusty
addons:
  apt:
    packages:
      - gdb
      - apport
      - libhdf5-serial-dev

language: 
  - r

os:
  - linux
  - osx

cache: packages

compiler:
  - gcc

env:
  - CONDA_PY=3.6 EDITABLE_PIP=1
  - CONDA_PY=3.6 EDITABLE_PIP=0
before_install:
 # https://github.com/springmeyer/travis-coredump/blob/master/.travis.yml
  - ulimit -c
  - ulimit -a -S
  - ulimit -a -H
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
  - chmod +x miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda update --yes conda
install:
  # linking against libhdf5_cpp fails right now if we do not use this conda environment.
  # it is unclear why at this time.
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget https://raw.githubusercontent.com/qiime2/environment-files/master/2019.4/release/qiime2-2019.4-py36-linux-conda.yml -O environment.yml; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then conda create -n test-env --file https://data.qiime2.org/distro/core/qiime2-2017.5-conda-linux-64.txt python=$CONDA_PY; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget https://raw.githubusercontent.com/qiime2/environment-files/master/2019.4/release/qiime2-2019.4-py36-osx-conda.yml -O environment.yml; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then conda env create -n test-env --file environment.yml python=$CONDA_PY; fi
  - source activate test-env
  # needed for the hdf5 dev tools
  - conda install --yes -c conda-forge cython
  - conda install --yes flake8 nose
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sed -i 's/^CXXBASE=.*/CXXBASE=clang++/' `which h5c++` && echo "BASE"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sed -i 's/^CXXLINKERBASE=.*/CXXLINKERBASE=clang++/' `which h5c++` && echo $ "LINKERBASE"; fi
    # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sed -i 's/ -fno-plt//g' `which h5c++` && echo "remove -fno-plt"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sed -i '' 's/^CXXBASE=.*/CXXBASE=clang++/' `which h5c++` && echo "BASE"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sed -i '' 's/^CXXLINKERBASE=.*/CXXLINKERBASE=clang++/' `which h5c++` && echo "LINKERBASE"; fi
  - export CC=`which h5c++`
  - python3-config --cflags
  - clang -v
  - cat `which h5c++`
  # verify both installation methods
  - 'if [ ${EDITABLE_PIP} ]; then
        pip install -e . || travis_terminate 1;
     else
        pip install . || travis_terminate 1;
     fi'
  - pushd sucpp; make test; make main; make api; make capi_test; make rapi_test; popd 
script:
  - ulimit -c unlimited -S
  - pushd sucpp; ./test_su; ./test_api; popd
  - nosetests
  - flake8 unifrac setup.py
  - ./sucpp/ssu
  # check number of available cpus
  - python -c "import os; print(os.cpu_count())"
  # santiy test io
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm -m unweighted -n 2; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm -m unweighted; fi
  - python -c "import skbio; dm = skbio.DistanceMatrix.read('ci/test.dm')"
  # merge test
  - ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.start0.stop3 -m unweighted --mode partial --start 0 --stop 3
  - ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.start3.stop5 -m unweighted --mode partial --start 3 --stop 5
  - ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.partial --mode merge-partial --partial-pattern "ci/test.dm.start*"
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then exp=$(md5sum ci/test.dm | awk '{ print $1 }'); fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then obs=$(md5sum ci/test.dm.partial | awk '{ print $1 }'); fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then exp=$(md5 -r ci/test.dm | awk '{ print $1 }'); fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then obs=$(md5 -r ci/test.dm.partial | awk '{ print $1 }'); fi
  - python -c "assert '${obs}' == '${exp}'"
