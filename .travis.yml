sudo: required
dist: trusty
os: linux
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-4.9
      - g++-4.9
      - libhdf5-serial-dev

language: cpp

env:
  - PYTHON_VERSION=3.5 EDITABLE_PIP=1
  - PYTHON_VERSION=3.5 EDITABLE_PIP=0
before_install:
  - echo $LD_LIBRARY_PATH
  - sudo ln -s /usr/bin/gcc-4.9 /usr/local/bin/gcc
  - sudo ln -s /usr/bin/g++-4.9 /usr/local/bin/g++
  - export CC_FOR_BUILD=/usr/local/bin/gcc
  - export CXX_FOR_BUILD=/usr/local/bin/g++
  - export PERFORMING_CONDA_BUILD=True
  # verify compilter versions
  - $CC_FOR_BUILD -v 
  - $CXX_FOR_BUILD -v 
  # https://github.com/springmeyer/travis-coredump/blob/master/.travis.yml
  - ulimit -c
  - ulimit -a -S
  - ulimit -a -H
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=/home/travis/miniconda3/bin:$PATH
install:
  - conda create --yes -n test-env python=$PYTHON_VERSION
  - source activate test-env
  - conda install --yes numpy "h5py==2.7.0" "scikit-bio>=0.5.1" flake8 nose
  # needed for the hdf5 dev tools
  - conda install --yes -c conda-forge cython "hdf5==1.8.17" biom-format
  # make sure hdf5 is using the compiler we want to use for this build
  - sed -i "s|^CXXBASE=.*|CXXBASE=$CXX_FOR_BUILD|" `which h5c++` 
  - sed -i "s|^CXXLINKERBASE=.*|CXXLINKERBASE=$CXX_FOR_BUILD|" `which h5c++` 
  # remove these flags for compiling with gcc
  - sed -i 's/\(H5BLD_CXXFLAGS="\)\(.*\)\("\)/\1 \3/' `which h5c++` 
  - sed -i 's/\(H5BLD_CPPFLAGS="\)\(.*\)\("\)/\1 \3/' `which h5c++` 
  - sed -i 's/\(H5BLD_LDFLAGS="\)\(.*\)\("\)/\1 \3/' `which h5c++`
  # make sure dynamic linking to shared libraries is enabled
  - sed -i 's/^STATIC_AVAILABLE=.*/STATIC_AVAILABLE="no"/' `which h5c++` 
  - export CC=`which h5c++`
  - pushd sucpp; make test; make main; make api; make capi_test; make rapi_test; popd 
  # verify both installation methods
  - 'if [ ${EDITABLE_PIP} ]; then
        pip install -e . || travis_terminate 1;
     else
        pip install . || travis_terminate 1;
     fi'

script:
  - ulimit -c unlimited -S
  - pushd sucpp; ./test_su; ./test_api; popd
  - nosetests
  - flake8 unifrac setup.py
  - ./sucpp/ssu
  # santiy test io
  - ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm -m unweighted -n 2
  - python -c "import skbio; dm = skbio.DistanceMatrix.read('ci/test.dm')"
  # merge test
  - ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.start0.stop3 -m unweighted --mode partial --start 0 --stop 3
  - ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.start3.stop5 -m unweighted --mode partial --start 3 --stop 5
  - ./sucpp/ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.partial --mode merge-partial --partial-pattern "ci/test.dm.start*"
  - exp=$(md5sum ci/test.dm | awk '{ print $1 }')
  - obs=$(md5sum ci/test.dm.partial | awk '{ print $1 }')
  - python -c "assert '${obs}' == '${exp}'"
