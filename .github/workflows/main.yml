name: UniFrac CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: flake8
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: install dependencies
      run: python -m pip install --upgrade pip
    - name: lint
      run: |
        pip install -q flake8
        flake8 unifrac setup.py
      
  build-and-test:
    needs: lint
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:        
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Install 
      shell: bash -l {0}
      run: |
        if [[ "$(uname -s)" != "Linux" ]];
        then
          ls -l /Applications/
          # coonda clang does not like xcode 12
          sudo xcode-select --switch /Applications/Xcode_11.7.app
          # the system tools are unusable, hide them
          sudo mv -f /Library/Developer/CommandLineTools /Library/Developer/CommandLineTools.org
        fi
        conda create --yes -n unifrac -c conda-forge -c bioconda python=${{ matrix.python-version }}
        conda activate unifrac
        conda config --add channels conda-forge
        conda config --add channels bioconda
        if [[ "$(uname -s)" == "Linux" ]];
        then
          conda install --yes -c conda-forge -c bioconda gxx_linux-64
        else
          conda install --yes -c conda-forge -c bioconda clangxx_osx-64
        fi
        conda install --yes -c conda-forge -c bioconda unifrac-binaries
        conda install --yes -c conda-forge -c bioconda cython "hdf5<1.12.1" biom-format numpy "h5py<3.0.0, >3.3.0" "scikit-bio>=0.5.1" nose
        echo "$(uname -s)"
        if [[ "$(uname -s)" == "Linux" ]];
        then
          which x86_64-conda-linux-gnu-gcc
          x86_64-conda-linux-gnu-gcc -v
          x86_64-conda-linux-gnu-g++ -v
        else
          which clang
          clang -v
        fi
        which h5c++
        pip install iow
        pip install -e .   
            
    - name: Tests
      shell: bash -l {0}
      run: |
        conda activate unifrac
        ls -lrt $CONDA_PREFIX/lib/libhdf5_cpp*
        nosetests
        
    - name: Sanity checks
      shell: bash -l {0}
      run: |
        conda activate unifrac
        set -e
        ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm -m unweighted
        python -c "import skbio; dm = skbio.DistanceMatrix.read('ci/test.dm')"
        pushd unifrac/tests
        python -c "import unifrac; unifrac.unweighted_to_file('data/crawford.biom','data/crawford.tre','../../ci/test.dm.h5')"
        python -c "import unifrac,skbio; dm_u=unifrac.unweighted('data/crawford.biom','data/crawford.tre');  dm = skbio.DistanceMatrix.read('../../ci/test.dm'); t=abs(dm_u.data-dm.data).max(); print(t); assert t < 0.1"
        popd
        python -c "import h5py,skbio; f_u=h5py.File('ci/test.dm.h5','r'); dm_u=skbio.stats.distance.DistanceMatrix(f_u['matrix'][:,:],f_u['order'][:])"
        python -c "import h5py,skbio; dm = skbio.DistanceMatrix.read('ci/test.dm'); f_u=h5py.File('ci/test.dm.h5','r'); dm_u=skbio.stats.distance.DistanceMatrix(f_u['matrix'][:,:],f_u['order'][:]); t=abs(dm_u.data-dm.data).max(); print(t); assert t < 0.1"
        if [[ "$(uname -s)" == "Linux" ]]; 
        then
          MD5=md5sum
        else
          MD5='md5 -r'
        fi
        ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.start0.stop3 -m unweighted --mode partial --start 0 --stop 3
        ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.start3.stop5 -m unweighted --mode partial --start 3 --stop 5
        ssu -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.dm.partial --mode merge-partial --partial-pattern "ci/test.dm.start*"
        exp=$($MD5 ci/test.dm | awk '{ print $1 }')
        obs=$($MD5 ci/test.dm.partial | awk '{ print $1 }')
        python -c "assert '${obs}' == '${exp}'"
        faithpd -i unifrac/tests/data/crawford.biom -t unifrac/tests/data/crawford.tre -o ci/test.faith.obs
        tail -n +2 ci/test.faith.obs > ci/test.faith.header-removed.obs
        exp1=$($MD5 unifrac/tests/data/test.faith.exp | awk '{ print $1 }')
        obs1=$($MD5 ci/test.faith.header-removed.obs | awk '{ print $1 }')
        python -c "assert '${obs1}' == '${exp1}'"

        
        
